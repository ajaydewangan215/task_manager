{"version":3,"sources":["component/Button.jsx","component/Header.jsx","component/Task.js","component/Tasks.jsx","component/AddTask.jsx","component/About.jsx","component/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","inputText","setInputText","InputEvent","e","target","name","value","currentTarget","checked","onSubmit","preventDefault","alert","type","placeholder","onChange","About","to","Footer","App","showAddtask","setShowAddtask","setTasks","useEffect","a","fetchtasks","data","gettasks","fetch","res","json","addtask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","toggleToTask","updTask","exact","path","render","props","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6794b695.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n    {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import { useLocation } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n  const location = useLocation()\r\n    return (\r\n        <header className='header'>\r\n          <h1>{title}</h1>\r\n          {location.pathname==='/' && <Button color={!showAdd ? 'green' : 'red'} text={!showAdd ? 'Add' : 'Hide'} onClick={onAdd} />}\r\n        </header>\r\n      )\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'    \r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} {' '}\r\n            <FaTimes \r\n                style={{color: 'red', cursor: 'pointer'}} \r\n                onClick={()=> onDelete(task.id)}                 \r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {   \r\n    return (\r\n        <>\r\n            {\r\n                tasks.map(task => \r\n                    <Task \r\n                        key={task.id} \r\n                        task={task} \r\n                        onDelete={onDelete} \r\n                        onToggle={onToggle} \r\n                    />\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n\r\n    const [inputText, setInputText] = useState({\r\n        text:'', day:'', reminder:false\r\n    })\r\n\r\n    const InputEvent = e => {\r\n        let { name, value } = e.target\r\n        if(name === 'reminder') {value = e.currentTarget.checked}\r\n        setInputText({...inputText, [name]:value})\r\n    }\r\n\r\n    const {text, day, reminder} = inputText\r\n\r\n    const submitEvent = e => {\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please add text')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setInputText({ text:'', day:'', reminder:false})\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={submitEvent}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    value={text}\r\n                    placeholder=\"Add Task\" \r\n                    onChange={InputEvent}\r\n                    />\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"day\"\r\n                    value={day}\r\n                    onChange={InputEvent}\r\n                    placeholder=\"Add Day & Time\" \r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    checked={reminder}\r\n                    name=\"reminder\"\r\n                    onChange={InputEvent}\r\n                    value={reminder}\r\n                 />\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>version 1.0.0</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n           <p>Copyright &copy; 2021</p> \r\n           <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState, useEffect } from 'react'\nimport Header from './component/Header'\nimport Tasks from './component/Tasks'\nimport AddTask from './component/AddTask'\nimport About from './component/About'\nimport Footer from './component/Footer'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n\nfunction App() {\n  const [showAddtask, setShowAddtask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const gettasks = async () => {\n      const data = await fetchtasks() \n      setTasks(data)    \n    }\n    gettasks()\n  }, [])\n\n  // fetch Tasks\n  const fetchtasks = async (id='') => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()        \n    return data\n  }\n\n  // add task\n  const addtask = async (task) => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify(task)\n    })\n    const data = await res.json()\n    setTasks([...tasks, data])\n    // const id = Math.floor(Math.random() * 1000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  }\n\n  // delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {method:'DELETE'})\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  // toggle Reminder\n  const toggleReminder = async (id) => {\n    const toggleToTask = await fetchtasks(id)\n    const updTask = {...toggleToTask, reminder: !toggleToTask.reminder}\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify(updTask)\n    })\n    const data = await res.json()\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task))\n  }\n\n  return (\n    <BrowserRouter>\n    <div className=\"container\">\n      <Header title=\"Task Tracker\" onAdd = {() => setShowAddtask(!showAddtask)} showAdd={showAddtask}/>\n      <Route exact path=\"/\" render={(props) =>(\n          <>\n            {showAddtask && <AddTask onAdd={addtask} />}\n            { tasks.length > 0 ?  <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Task To Show'}\n          </>\n        )} />\n      <Route path=\"/about\" render={About} />\n      <Footer />\n    </div>    \n    </BrowserRouter>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}